package pb138.rss.gui;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.DefaultListModel;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import pb138.rss.feed.Container;
import pb138.rss.gui.renderer.CheckboxListCellRenderer;
import pb138.rss.gui.renderer.CheckboxSelectionModel;
import pb138.rss.reader.downloader.RssFeedReaderTask;

/**
 *
 * @author Drimal
 */
public class RemoveFeedDialog extends javax.swing.JDialog {

    private DefaultListModel<String> listModel;
    private List<RssFeedReaderTask> feedReaderTask;
    private Container container;
    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form RemoveFeedDialog
     */
    public RemoveFeedDialog(java.awt.Frame parent, boolean modal, String dialogLabel, String leftButtonLabel, String rightButtonLabel,
            List<String> labelValues) {
        super(parent, modal);

        this.listModel = createListModel(labelValues);
        initComponents();
        this.leftButton.setText(leftButtonLabel);
        this.rightlButton.setText(rightButtonLabel);
        this.textLabel.setText(dialogLabel);

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    public void setContainer(Container container) {
        this.container = container;
    }

    public void setFeedReaderTask(List<RssFeedReaderTask> feedReaderTask) {
        this.feedReaderTask = feedReaderTask;
    }

    private DefaultListModel<String> createListModel(List<String> labelValues) {
        DefaultListModel<String> listModel = new DefaultListModel<>();

        for (String label : labelValues) {
            listModel.addElement(label);
        }

        return listModel;
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftButton = new javax.swing.JButton();
        rightlButton = new javax.swing.JButton();
        textLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setTitle("Remove Feed Source");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        leftButton.setText("OK");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        rightlButton.setText("Cancel");
        rightlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightlButtonActionPerformed(evt);
            }
        });

        textLabel.setText("DEFAULT");

        jList1.setModel(listModel);
        jList1.setToolTipText("");
        jList1.setCellRenderer(new CheckboxListCellRenderer());
        jList1.setSelectionModel(new CheckboxSelectionModel());
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 136, Short.MAX_VALUE)
                        .addComponent(leftButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rightlButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(textLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rightlButton)
                    .addComponent(leftButton))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(leftButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        int o = JOptionPane.showConfirmDialog(rootPane, "Do you really want to delete?");
        if (o == 0) {
            int[] selectedIndices = jList1.getSelectedIndices();
            final List<RssFeedReaderTask> tasksToDelete = new ArrayList<>();
            for (int i = 0; i < selectedIndices.length; i++) {
                tasksToDelete.add(this.feedReaderTask.get(selectedIndices[i]));
            }
            for (RssFeedReaderTask task : tasksToDelete) {
                feedReaderTask.remove(task);
                container.removeOldData(task);
            }

            JOptionPane.showMessageDialog(rootPane, "Selected feeds deleted");
        }
        doClose(RET_OK);
    }//GEN-LAST:event_leftButtonActionPerformed

    private void rightlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightlButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_rightlButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveFeedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveFeedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveFeedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveFeedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RemoveFeedDialog dialog = new RemoveFeedDialog(new javax.swing.JFrame(), true, "Test", "leftButton", "rightButton", Arrays.asList("Test 1", "Test 2", "Test 3"));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JButton leftButton;
    private javax.swing.JButton rightlButton;
    public javax.swing.JLabel textLabel;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
